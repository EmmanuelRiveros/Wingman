/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mx.itson.wingman.ui;

import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import mx.itson.wingman.entidades.Avion;
import mx.itson.wingman.DAO.PilotoDAO;
import mx.itson.wingman.entidades.Piloto;

/**
 *
 * @author emman
 */
public class formPilotos extends javax.swing.JFrame {

    /**
     * Creates new form formPilotos
     */
    public formPilotos() {
        initComponents();
        cargarTablaPilotos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblPilotos = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        btnFinalizar1 = new javax.swing.JButton();
        btnAgregar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tblPilotos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Id", "Nombre", "Estado", "Especialidad"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblPilotos);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setText("PILOTOS");

        btnFinalizar1.setText("Finalizar");
        btnFinalizar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFinalizar1ActionPerformed(evt);
            }
        });

        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(btnAgregar)
                        .addGap(234, 234, 234)
                        .addComponent(btnEliminar)
                        .addGap(246, 246, 246)
                        .addComponent(btnEditar)
                        .addContainerGap(21, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btnFinalizar1)
                                .addGap(227, 227, 227)
                                .addComponent(jLabel2)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(btnFinalizar1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnAgregar)
                        .addComponent(btnEliminar))
                    .addComponent(btnEditar))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        formPilotosEditar formEditar = new formPilotosEditar(this, true);
        formEditar.setBtnFinalizarText("Agregar");
        formEditar.setVisible(true);

        cargarTablaPilotos();
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // Crea una variable que almacenara la id de cada columna seleccionada
        int ids[] = tblPilotos.getSelectedRows();
        // Asigna la id correspondiente de los actores a cada campo que existe en ids
        for (int i=0; tblPilotos.getSelectedRowCount()>i; i++){
            ids[i] = Integer.parseInt(tblPilotos.getValueAt(tblPilotos.getSelectedRows()[i], 0).toString());
        }

        PilotoDAO pilotoDAO = new PilotoDAO();
        
        boolean resultado = pilotoDAO.eliminarPiloto(ids);

        // Mostrar un mensaje de dialogo dependiendo del valor de resultado
        if(resultado){
            JOptionPane.showMessageDialog(this, "El registro se actualizo correctamente", "Registro borrado", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(this, "Ocurrió un error al borrar", "Error", JOptionPane.ERROR_MESSAGE);
        }

        cargarTablaPilotos();
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        // Obtener la fila seleccionada
        int filaSeleccionada = tblPilotos.getSelectedRow();

        // Verificar si se ha seleccionado una fila
        if (filaSeleccionada != -1 && tblPilotos.getSelectedRowCount() < 2) {
            // Obtener los valores de la fila seleccionada
            String id = tblPilotos.getValueAt(filaSeleccionada, 0).toString();
            String nombre = tblPilotos.getValueAt(filaSeleccionada, 1).toString();
            String estado = tblPilotos.getValueAt(filaSeleccionada, 2).toString();
            String especialidad = tblPilotos.getValueAt(filaSeleccionada, 3).toString();

            // Abrir la ventana para editar el piloto
            formPilotosEditar formEditar = new formPilotosEditar(this, true);

            // Asignar los valores que se obtenieron de la tabla
            formEditar.setId(id);
            formEditar.setNombreText(nombre);
            formEditar.setCmbEstadoPiloto(estado);
            formEditar.setCmbEspecialidad(especialidad);

            formEditar.setVisible(true);

        } else {
            JOptionPane.showMessageDialog(this, "No se ha seleccionado una fila", "Error de selección", JOptionPane.ERROR_MESSAGE);
        }

        cargarTablaPilotos();
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnFinalizar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFinalizar1ActionPerformed
        formTrabajo formTrabajo = new formTrabajo();
        formTrabajo.setVisible(true);

        // Cerrar ventana actual
        this.dispose();
    }//GEN-LAST:event_btnFinalizar1ActionPerformed

    private void cargarTablaPilotos() {
    PilotoDAO pilotoDAO = new PilotoDAO();    
        
    DefaultTableModel modelo = (DefaultTableModel) tblPilotos.getModel();
    modelo.setRowCount(0);

    List<Piloto> pilotos = pilotoDAO.obtenerTodos();
    for (Piloto piloto : pilotos) {
        
        modelo.addRow(new Object[]{
            piloto.getPilotoId(),
            piloto.getNombre(),
            piloto.getEstado(),
            piloto.getEspecialidad(),
            });
        }  
    }
    /**
     * @param args the command line arguments
     */
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(formPilotos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(formPilotos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(formPilotos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(formPilotos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new formPilotos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnFinalizar1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblPilotos;
    // End of variables declaration//GEN-END:variables
}
