/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mx.itson.wingman.ui;

import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import mx.itson.wingman.DAO.DestinoDAO;
import mx.itson.wingman.DAO.PilotoDAO;
import mx.itson.wingman.entidades.Avion;
import mx.itson.wingman.entidades.Destino;
import mx.itson.wingman.entidades.Piloto;
import mx.itson.wingman.entidades.Vuelo;
import mx.itson.wingman.enumeradores.TipoVuelo;

/**
 *
 * @author emman
 */
public class formVuelosProgramar extends javax.swing.JDialog {

    /**
     * Creates new form formVuelosProgramar
     */
    public formVuelosProgramar(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cmbAviones = new javax.swing.JComboBox<>();
        cmbDestino = new javax.swing.JComboBox<>();
        cmbTipoVuelo = new javax.swing.JComboBox<>();
        cmbPiloto = new javax.swing.JComboBox<>();
        txtClima = new javax.swing.JTextField();
        btnAgregar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        cmbAviones.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Avion" }));
        cmbAviones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbAvionesActionPerformed(evt);
            }
        });

        cmbDestino.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Destino" }));

        cmbTipoVuelo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tipo Vuelo" }));

        cmbPiloto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Piloto" }));

        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        jLabel1.setText("Destino");

        jLabel2.setText("Avion");

        jLabel3.setText("Tipo de vuelo");

        jLabel4.setText("Piloto");

        jLabel5.setText("Clima");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmbPiloto, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(cmbTipoVuelo, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(cmbDestino, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(cmbAviones, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtClima, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING))
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(95, 95, 95)
                        .addComponent(btnAgregar)))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmbAviones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmbDestino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmbTipoVuelo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmbPiloto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtClima, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnAgregar)
                .addContainerGap(42, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmbAvionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbAvionesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbAvionesActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
         try {
            // Llenar el JComboBox cmbAviones con los nombres de los aviones disponibles
            cmbAviones.removeAllItems(); // Limpiar los elementos existentes

            List<Avion> aviones = Avion.obtenerTodos(); // Obtener la lista de aviones desde la base de datos
            for (Avion avion : aviones) {
                cmbAviones.addItem(avion.getNombre()); // Agregar el nombre del avión al JComboBox
            }

            // Llenar el JComboBox cmbDestino con los nombres de los destinos disponibles
            cmbDestino.removeAllItems(); // Limpiar los elementos existentes

            DestinoDAO destinoDao = new DestinoDAO();
            List<Destino> destinos = destinoDao.obtenerTodos(); // Obtener la lista de destinos desde la base de datos
            for (Destino destino : destinos) {
                cmbDestino.addItem(destino.getAirbaseNombre()); // Agregar el nombre del destino al JComboBox
            }

            TipoVuelo[] tipoVuelo = TipoVuelo.values();
            // Crear un DefaultComboBoxModel con los valores del enumerador convertidos a strings
            DefaultComboBoxModel<String> cmbTipo = new DefaultComboBoxModel<>();
            for (TipoVuelo estado : tipoVuelo) {
                cmbTipo.addElement(estado.toString());
            }   
            // Pasar el modelo al comboBox ya existente
            cmbTipoVuelo.setModel(cmbTipo);
            
            // Llenar el JComboBox cmbPiloto con los nombres de los pilotos disponibles
            cmbPiloto.removeAllItems(); // Limpiar los elementos existentes

            PilotoDAO pilotoDao = new PilotoDAO();
            List<Piloto> pilotos = pilotoDao.obtenerTodos(); // Obtener la lista de pilotos desde la base de datos
            for (Piloto piloto : pilotos) {
                cmbPiloto.addItem(piloto.getNombre()); // Agregar el nombre del piloto al JComboBox
            }
        } catch (Exception ex) {
            System.err.println("Ocurrió un error al llenar los JComboBox: " + ex.getMessage());
        }
    }//GEN-LAST:event_formWindowOpened

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed


        DestinoDAO destinoDAO = new DestinoDAO();

        PilotoDAO pilotoDAO = new PilotoDAO();
        
        try {
            // Obtener los valores seleccionados de los JComboBox
            Avion avionSeleccionado = Avion.buscarPorNombre(cmbAviones.getSelectedItem().toString());
            Destino destinoSeleccionado = destinoDAO.buscarPorNombre(cmbDestino.getSelectedItem().toString());
            Piloto pilotoSeleccionado = pilotoDAO.buscarPorNombre(cmbPiloto.getSelectedItem().toString());

            // Crear un nuevo objeto Vuelo con los valores seleccionados
            Vuelo vuelo = new Vuelo();
            vuelo.setAvion(avionSeleccionado);
            vuelo.setDestino(destinoSeleccionado);
            vuelo.setTipoVuelo(TipoVuelo.valueOf(cmbTipoVuelo.getSelectedItem().toString()));
            vuelo.setPiloto(pilotoSeleccionado);
            vuelo.setClima(txtClima.getText());

            // Agregar el vuelo a la base de datos
            boolean resultado = Vuelo.agregarVuelo(vuelo);
            if (resultado) {
                JOptionPane.showMessageDialog(this, "El vuelo se ha agregado correctamente");
            } else {
                JOptionPane.showMessageDialog(this, "Ocurrió un error al agregar el vuelo");
            }
        } catch (Exception ex) {
            System.err.println("Ocurrió un error al agregar el vuelo: " + ex.getMessage());
        }
    }//GEN-LAST:event_btnAgregarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(formVuelosProgramar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(formVuelosProgramar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(formVuelosProgramar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(formVuelosProgramar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                formVuelosProgramar dialog = new formVuelosProgramar(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JComboBox<String> cmbAviones;
    private javax.swing.JComboBox<String> cmbDestino;
    private javax.swing.JComboBox<String> cmbPiloto;
    private javax.swing.JComboBox<String> cmbTipoVuelo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField txtClima;
    // End of variables declaration//GEN-END:variables
}
